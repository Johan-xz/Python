{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3350,"status":"ok","timestamp":1663964076372,"user":{"displayName":"Johan Alejandro Gloria González","userId":"04989942918554874661"},"user_tz":300},"id":"E17QZUnSmoXD","outputId":"1f8f0544-989a-4097-8adb-c914779e2a63"},"outputs":[{"name":"stdout","output_type":"stream","text":["(195, 23)\n","=== ORIGINAL (primeras lineas) ===\n","[[ 1.199920e+02  1.573020e+02  7.499700e+01  7.840000e-03  7.000000e-05\n","   3.700000e-03  5.540000e-03  1.109000e-02  4.374000e-02  4.260000e-01\n","   2.182000e-02  3.130000e-02  2.971000e-02  6.545000e-02  2.211000e-02\n","   2.103300e+01  4.147830e-01  8.152850e-01 -4.813031e+00  2.664820e-01\n","   2.301442e+00]\n"," [ 1.224000e+02  1.486500e+02  1.138190e+02  9.680000e-03  8.000000e-05\n","   4.650000e-03  6.960000e-03  1.394000e-02  6.134000e-02  6.260000e-01\n","   3.134000e-02  4.518000e-02  4.368000e-02  9.403000e-02  1.929000e-02\n","   1.908500e+01  4.583590e-01  8.195210e-01 -4.075192e+00  3.355900e-01\n","   2.486855e+00]\n"," [ 1.166820e+02  1.311110e+02  1.115550e+02  1.050000e-02  9.000000e-05\n","   5.440000e-03  7.810000e-03  1.633000e-02  5.233000e-02  4.820000e-01\n","   2.757000e-02  3.858000e-02  3.590000e-02  8.270000e-02  1.309000e-02\n","   2.065100e+01  4.298950e-01  8.252880e-01 -4.443179e+00  3.111730e-01\n","   2.342259e+00]\n"," [ 1.166760e+02  1.378710e+02  1.113660e+02  9.970000e-03  9.000000e-05\n","   5.020000e-03  6.980000e-03  1.505000e-02  5.492000e-02  5.170000e-01\n","   2.924000e-02  4.005000e-02  3.772000e-02  8.771000e-02  1.353000e-02\n","   2.064400e+01  4.349690e-01  8.192350e-01 -4.117501e+00  3.341470e-01\n","   2.405554e+00]\n"," [ 1.160140e+02  1.417810e+02  1.106550e+02  1.284000e-02  1.100000e-04\n","   6.550000e-03  9.080000e-03  1.966000e-02  6.425000e-02  5.840000e-01\n","   3.490000e-02  4.825000e-02  4.465000e-02  1.047000e-01  1.767000e-02\n","   1.964900e+01  4.173560e-01  8.234840e-01 -3.747787e+00  2.345130e-01\n","   2.332180e+00]]\n","[1. 1. 1. 1. 1.]\n","(136, 21)\n","(59, 21)\n","=== ESTANDARIZADO ===\n"," +++Entrenamiento+++\n","[[ 0.68218987  0.08415192  1.37724001 -0.63787521 -0.64307112 -0.54965619\n","  -0.60250748 -0.54974197 -0.75758989 -0.72561517 -0.7712434  -0.71013403\n","  -0.67962936 -0.77156512 -0.53728776  0.99871168 -0.9293912   0.79649335\n","  -0.6865305  -0.18893445 -0.30386704]\n"," [ 1.15431412  0.17569689  1.77011185 -0.71608336 -0.90312962 -0.60580608\n","  -0.69180606 -0.60589101 -0.96436287 -0.91929338 -0.97141172 -0.89364417\n","  -0.90647775 -0.97113552 -0.55119122  1.8631629  -0.65098964  0.35173967\n","  -1.79750779 -0.66798306 -0.71802175]\n"," [-0.96721823 -0.85540548 -0.47772438 -0.51965358 -0.38301263 -0.49646155\n","  -0.48450578 -0.49556307 -0.74409422 -0.7163924  -0.7514069  -0.69509221\n","  -0.70189018 -0.75112718 -0.48362911  0.95941844 -1.15978543  0.80553425\n","  -0.22738222 -0.43652792 -1.34205815]\n"," [-0.39136559 -0.3743263   0.33383287 -0.62150606 -0.64307112 -0.6530902\n","  -0.64396753 -0.65218934 -0.84675773 -0.8132315  -0.83435953 -0.83648527\n","  -0.70613034 -0.8343817  -0.46125324  0.7857876  -0.37642945 -1.40136757\n","  -0.77238206 -0.92002593 -0.87200854]\n"," [ 1.00054501  0.1689166  -0.87014749  0.23878361 -0.12295413  0.32805533\n","   0.10869195  0.32894123  0.01359136 -0.06157557  0.17099037 -0.01068964\n","  -0.20579181  0.1706837  -0.38174285  0.01041477 -0.01614049  0.32382519\n","  -0.13854044  0.62701531  0.54129579]]\n"," +++Prueba+++\n","[[-1.05237458 -0.84336027 -0.22633696 -0.44181634 -0.09124283 -0.46283887\n","  -0.20459545 -0.46084275  2.09549726  1.95536221  2.06898472  2.25267851\n","   1.99442044  2.06942534  0.30633056 -1.43548593  1.35600835 -0.09907277\n","   0.03185341  0.94215888  0.17984194]\n"," [-0.3136067   1.55012567 -0.69289001 -0.17858551 -0.09124283 -0.63311654\n","  -0.19136681 -0.63535148 -0.61941792 -0.59872978 -0.75730988 -0.60366058\n","  -0.16964664 -0.75684824 -0.05638309  0.13988129  0.66308888 -1.11924952\n","   0.219059    0.18250583 -0.28780969]\n"," [-0.922167   -0.83540528 -0.41095907  0.19798081  0.32606933  0.28133762\n","  -0.13845226  0.27924248  0.16576333  0.06140477  0.17088778  0.13678097\n","   0.12897095  0.17089411  0.30727267  0.17096363  1.23690325 -0.98733818\n","   2.00542814 -0.18270096  0.24132033]\n"," [ 0.03157866 -0.38859257  0.66420609 -0.91709422 -0.92586715 -0.84123369\n","  -0.90571323 -0.83929542  0.38772803  0.30502585  0.36863423  0.40647823\n","   0.49951167  0.36819069 -0.53073717  0.24454631 -1.23063984 -0.24253288\n","  -0.72151109 -0.33505583  0.34298452]\n"," [-0.32875249 -0.46059602 -1.0637309   1.85779742  1.57800581  2.11655251\n","   0.96613896  2.11684047  1.89995693  1.64887117  2.17929227  0.89438507\n","   1.03028622  2.17883526  1.36762127 -0.49286637  0.15310806  0.44130863\n","  -0.19445888 -0.82596943 -0.72902838]]\n","***Exactitud:  0.864 ***\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:696: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (300) reached and the optimization hasn't converged yet.\n","  ConvergenceWarning,\n"]}],"source":["\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.neural_network import MLPClassifier\n","\n","nom_archivo=\"parkinsons.csv\"\n","datos=np.loadtxt(nom_archivo, delimiter=\",\")\n","print(datos.shape)\n","#Imprimir dimensiones del conjunto de datos\n","\n","X=datos[:,0:21] #Caracteristicas del conjunto de datos\n","y=datos[:,22] #Etiquetas (clases)\n","\n","print(\"=== ORIGINAL (primeras lineas) ===\")\n","print(X[:5]) #Imprime las primera cinco lineas del data set\n","print(y[:5]) #Imprime las primeras cinco etiquetas\n","\n","#Conjunto de entrenamiento y conjunto de prueba\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.3, random_state=42)\n","\n","print(X_train.shape) #Tamaño del conjunto de entrenamiento\n","print(X_test.shape) #Tamaño del conjunto de prueba\n","\n","#Estandarizacion de los conjuntos de entrenamiento y prueba\n","X_train = StandardScaler().fit_transform(X_train)\n","X_test = StandardScaler().fit_transform(X_test)\n","\n","print(\"=== ESTANDARIZADO ===\")\n","print(\" +++Entrenamiento+++\")\n","print(X_train[:5])\n","print(\" +++Prueba+++\")\n","print(X_test[:5])\n","\n","clf=MLPClassifier(random_state=42, hidden_layer_sizes=100, max_iter=300)\n","clf.fit(X_train, y_train)\n","\n","accuracy=round(clf.score(X_test, y_test),3)\n","print(\"***Exactitud: \",accuracy,\"***\")\n","\n","clf=MLPClassifier(random_state=42, hidden_layer_sizes=50, max_iter=300)\n","clf.fit(X_train, y_train)\n","\n","accuracy=round(clf.score(X_test, y_test),3)\n","print(\"***Exactitud: \",accuracy,\"***\")"]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNKAOvzla3dESBy99dZ17Sy"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}